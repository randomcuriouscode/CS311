import java.math.BigInteger;
import java.util.Arrays;


public class test_lcm_31_2_8 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	private static int gcdThing(int a, int b) {
	    BigInteger b1 = BigInteger.valueOf(a);
	    BigInteger b2 = BigInteger.valueOf(b);
	    BigInteger gcd = b1.gcd(b2);
	    return gcd.intValue();
	}
	
	public static int lcm(int a[]){
		return lcm_help(Arrays.copyOfRange(a, 0, (a.length - 1)/2), Arrays.copyOfRange(a, (a.length-1)/2, a.length-1));
	}
	
	public static int lcm_help(int l[], int r[]){
		if(l.length == 1 && r.length == 1)
				return (l[0] * r[0]) / gcdThing(l[0],r[0]);
		else if (l.length == 1 && r.length == 0)
				return r[0];
		else if (r.length == 1 && l.length == 0)
			return r[0];
		else
		{
				int left_half_lcm = lcm_help(Arrays.copyOfRange(l, 0, (l.length - 1)/2), Arrays.copyOfRange(l, (l.length-1)/2, l.length-1));
				int right_half_lcm = lcm_help(Arrays.copyOfRange(r, 0, (r.length - 1)/2), Arrays.copyOfRange(r, (r.length-1)/2, r.length-1));

				return (left_half_lcm * right_half_lcm) / gcdThing(left_half_lcm, right_half_lcm);
		}
	}
}
