package cs311_anagrams;

import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

public class AnagramClassNode implements Comparable<AnagramClassNode>{
	private AnagramClassNodeData data = null;
	private AnagramClassNode leftChild = null;
	private AnagramClassNode rightChild = null;
	
	public void setLeftChild(AnagramClassNode c){
		this.leftChild = c;
	}
	
	public AnagramClassNode getLeftChild(){
		return this.leftChild;
	}
	
	public void setRightChild(AnagramClassNode c){
		this.rightChild = c;
	}
	
	public AnagramClassNode getRightChild(){
		return this.rightChild;
	}
	
	public boolean hasLeftChild() {
		return this.getLeftChild() != null;
	}
	
	public boolean hasRightChild() {
		return this.getRightChild() != null;
	}
	
	public AnagramClassNode(String tag){
		this.data = new AnagramClassNodeData(tag);
	}
	
	public AnagramClassNodeData getData(){
		return this.data;
	}
	
	public void setData(AnagramClassNodeData data){
		this.data = data;
	}
	
	@Override
	public String toString(){
		return this.getData().toString();
	}

	@Override
	public int compareTo(AnagramClassNode o) {
		return this.getData().compareTo(o.getData());
	}
}
